{"version":3,"sources":["utils/queries.js","utils/auth.js","components/FavoriteList/index.js","pages/Profile.js","images/bckg.png","components/PetList/index.js","pages/Home.js","pages/Pet.js","utils/mutations.js","pages/Signup.js","pages/Login.js","components/Header/index.js","components/Footer/index.js","App.js","reportWebVitals.js","index.js"],"names":["QUERY_PETS","gql","QUERY_USER","QUERY_SINGLE_PET","QUERY_ME","decode","this","getToken","token","isTokenExpired","exp","Date","now","localStorage","removeItem","getItem","idToken","setItem","window","location","assign","reload","FavoriteList","favorites","title","showTitle","console","log","length","map","favorite","className","name","src","image","description","Profile","userId","useParams","useQuery","variables","loading","data","user","me","_id","Auth","loggedIn","getProfile","style","border","PetList","pets","bckgImg","alt","pet","fontSize","width","height","to","Home","Pet","petId","price","quantity","ADD_USER","LOGIN_USER","Signup","useState","email","password","formState","setFormState","useMutation","addUser","error","handleChange","event","target","value","handleFormSubmit","a","preventDefault","login","onSubmit","placeholder","type","onChange","cursor","message","Login","props","Header","fontWeight","onClick","logout","Footer","useLocation","history","useHistory","pathname","goBack","getFullYear","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f4265b3.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\n\n\nexport const QUERY_PROFILES = gql`\n  query allUsers {\n    user {\n      _id\n      name\n      pets\n      favorites {\n        _id\n      name\n      description\n      image\n      price\n      quantity\n      }\n    }\n  }\n`;\nexport const QUERY_PETS = gql`\n  query allPets {\n    pets {\n      _id\n      name\n      description\n      image\n      price\n      quantity\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  query user($userId: ID!) {\n    user(userId: $userId) {\n      _id\n      name\n      pets{\n        name\n      }\n      favorites {\n        _id\n      name\n      description\n      image\n      price\n      quantity\n      }\n    }\n  }\n`;\nexport const QUERY_SINGLE_PET = gql`\n  query singlePet($petId: ID!) {\n    pet(petId: $petId) {\n      _id\n      name\n      description\n      image\n      price\n      quantity\n    }\n  }\n`;\n\nexport const QUERY_ME = gql`\n  query me {\n    me {\n      _id\n      name\n      pets{\n        name\n      }\n      favorites {\n        _id\n      name\n      description\n      image\n      price\n      quantity\n      }\n    }\n  }\n`;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    const decoded = decode(token);\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst FavoriteList = ({\n    favorites,\n    title,\n    showTitle\n}) => {\n    console.log('object_id', favorites)\n\n    if (!favorites.length) {\n        return <h3>No Favorites Yet</h3>;\n    } else {\n        console.log('the list !!!!!!', favorites)\n        return (\n            <div>\n                {showTitle && <h3>{title}</h3>}\n                {favorites &&\n                    favorites.map((favorite) => {\n                        console.log('fav', favorite)\n                        return (\n                            <div className=\"card mb-3\">\n                                <h4 className=\"card-header bg-primary text-light p-2 m-0\">{favorite.name}</h4>\n                                <img src={favorite.image} />\n                                <p>{favorite.description}</p></div>\n                        )\n\n                    })\n\n                }\n\n            </div>\n        )\n    };\n};\n\nexport default FavoriteList;\n","import React from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER, QUERY_ME } from '../utils/queries';\nimport Auth from '../utils/auth';\nimport FavoriteList from '../components/FavoriteList';\n\nconst Profile = () => {\n\n    const { userId } = useParams();\n\n    const { loading, data } = useQuery(userId ? QUERY_USER : QUERY_ME, {\n        variables: { userId: userId },\n    });\n\n    const user = data?.me || data?.user || {};\n    // redirect to personal profile page if username is yours\n    // if (Auth.loggedIn() && Auth.getProfile().data._id === user._id) {\n    //     console.log('its the user!!!', user.me)\n    //     console.log()\n    //     return <Redirect to=\"/me\" user={user.me} />;\n    // }\n    // console.log('its the REAL user', user)\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n    if (!user?._id) {\n        return (\n            <h4>\n                You need to be logged in to see this. Use the navigation links above to\n                sign up or log in!\n            </h4>\n        );\n    }\n    if (Auth.loggedIn() && Auth.getProfile().data._id === user._id) {\n        console.log('USER FAVS in profules', user.name)\n    }\n    return (\n        <div>\n\n            <div className=\"flex-row justify-center mb-3\">\n                <h2 className=\"col-12 col-md-10 bg-dark text-light p-3 mb-5\">\n                    Viewing {userId ? `${user.name}'s` : `your`} profile.\n                </h2>\n                <div className=\"col-12 col-md-10 mb-5\">\n                </div>{\n                    !userId && (\n                        <button>Add a Pet!</button>\n                    )\n                }\n                {userId ? (\n                    <div\n                        className=\"col-12 col-md-10 mb-3 p-3\"\n                        style={{ border: '1px dotted #1a1a1a' }}\n                    >\n                        <FavoriteList showTitle={true} favorites={user.favorites}\n                            title={`${user.name}'s Favorite Pets!`} />\n                    </div>\n                ) : (<div\n                    className=\"col-12 col-md-10 mb-3 p-3\"\n                    style={{ border: '1px dotted #1a1a1a' }}\n                >\n                    <FavoriteList showTitle={true} favorites={user.favorites}\n                        title={`Your Favorite Pets!`} />\n                </div>)}\n            </div>\n        </div >\n    );\n};\n\nexport default Profile;\n","export default __webpack_public_path__ + \"static/media/bckg.8f97d2a0.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\n//import style from '../../style/main.css';\nimport bckgImg from '../../images/bckg.png';\n\nconst PetList = ({ pets, title }) => {\n  if (!pets.length) {\n    return <h3>No Profiles Yet</h3>;\n  } else\n\n    return (\n      <div>\n        <h3 className=\"text-primary\">{title}</h3>\n        <div className=\"flex-row justify-space-between my-4\">\n          <img className='background' src={bckgImg} alt=\"\" />\n          {pets &&\n            pets.map((pet) => (\n\n              < div className=\"col-12 col-xl-6\" >\n                <div className=\"card mb-3\">\n                  <h4 className=\"card-header bg-dark text-light p-2 m-0\">\n                    {pet.name} <br />\n                    <span className=\"text-white\" style={{ fontSize: '1rem' }}>\n                      <img src={pet.image} alt={pet.name} width=\"500\" height=\"600\" />\n                    </span>\n                  </h4>\n\n                  <Link\n                    className=\"btn btn-block btn-squared btn-light text-dark\"\n                    to={`/pet/${pet._id}`}\n                  >\n                    View and endorse their skills.\n                  </Link>\n                </div>\n              </div>\n            ))}\n        </div>\n      </div >\n    );\n};\n\nexport default PetList;\n","import React from 'react';\nimport { useQuery } from '@apollo/client';\n\nimport PetList from '../components/PetList';\n\nimport { QUERY_PETS } from '../utils/queries';\n\nconst Home = () => {\n  const { loading, data } = useQuery(QUERY_PETS);\n  console.log(data)\n  const pets = data?.pets || [];\n\n  return (\n    <main>\n      <div className=\"flex-row justify-center\">\n        <div className=\"col-12 col-md-10 my-3\">\n          {loading ? (\n            <div>Loading...</div>\n          ) : (\n            <PetList\n              pets={pets}\n              title=\"Here's the current Lists of Pets...\"\n            />\n          )}\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport '../style/main.css';\n\nimport { QUERY_SINGLE_PET } from '../utils/queries';\n\n\nconst Pet = () => {\n  const { petId } = useParams();\n\n  // If there is no `petId` in the URL as a parameter, execute the `QUERY_ME` query instead for the logged in user's information\n  const { loading, data } = useQuery(\n    QUERY_SINGLE_PET\n    , { variables: { petId: petId } }\n\n  );\n\n  // Check if data is returning from the `QUERY_ME` query, then the `QUERY_SINGLE_PROFILE` query\n  const pet = data?.pet || {};\n\n  // Use React Router's `<Redirect />` component to redirect to personal profile page if username is yours\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!pet?.name) {\n    return (\n      <h4>\n        You need to be logged in to see your profile page. Use the navigation\n        links above to sign up or log in!\n      </h4>\n    );\n  }\n\n  return (\n    <div className=\"card flex-column\">\n      <h2 className=\"card-header text-center\">\n        {pet.name}\n      </h2>\n      <img className=\"card-body align-self-center\" src={pet.image} alt={pet.name} />\n      <p className=\"card-footer text-center description\">description: {pet.description}</p>\n      <p className=\"card-price text-center price\">price: {pet.price}</p>\n      <p className=\"card-quantity text-center quantity\">quantity: {pet.quantity}</p>\n    </div>\n  );\n};\n\nexport default Pet;\n","import { gql } from '@apollo/client';\n\nexport const ADD_USER = gql`\n  mutation addUser($name: String!, $email: String!, $password: String!) {\n    addUser(name: $name, email: $email, password: $password) {\n      token\n      user {\n        _id\n        name\n      }\n    }\n  }\n`;\n\nexport const ADD_PET = gql`\n\n  mutation addPet($userId: ID!) {\n    addPet(userId: $userId) {\n\n      _id\n      name\n      pets{\n        name\n      }\n    }\n  }\n`;\nexport const UPDATE_PET = gql`\nmutation updatePet($name: String!, $description: String!, $price: Number!, $quantity: Number!, $image: String!) {\n  updatePet(name: $name, description: $description, price: $price, quantity: $quantity, image: $image) {\n    token\n    pet {\n      _id\n      name\n    }\n  }\n}\n`;\n\n\nexport const ADD_FAVORITE = gql`\n  mutation addFavorite($userId: ID!, $petId: ID!) {\n    addPet(userId: $userId, petId: $petId) {\n      _id\n      name\n      favorites {\n        _id\n      name\n      description\n      image\n      price\n      quantity\n      }\n    }\n  }\n`;\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        name\n      }\n    }\n  }\n`;\n\nexport const REMOVE_PET = gql`\n  mutation removePet($petId: ID!) {\n    removePet(petId: $petId) {\n      pets{\n        name\n      }\n    }\n  }\n`;\n\nexport const REMOVE_USER = gql`\n  mutation removeUser($user: ID!) {\n    removeUser(user: $user) {\n      user\n    }\n  }\n`;\n\nexport const REMOVE_FAVORITE = gql`\n  mutation removeFavorite($userId: ID!, $petId: ID!)  {\n    removeFavorite( userId: $userId, petId: $petId) {\n      _id\n      name\n      favorites {\n        _id\n      name\n      description\n      image\n      price\n      quantity\n      }\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({\n    name: '',\n    email: '',\n    password: '',\n  });\n  const [addUser, { error, data }] = useMutation(ADD_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\">\n          <h4 className=\"card-header bg-dark text-light p-2\">Sign Up</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <p>\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your username\"\n                  name=\"name\"\n                  type=\"text\"\n                  value={formState.name}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block btn-info\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Signup;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\">\n          <h4 className=\"card-header bg-dark text-light p-2\">Login</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <p>\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block btn-info\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport Auth from '../../utils/auth';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER, QUERY_ME } from '../../utils/queries';\nconst Header = () => {\n  const { userId } = useParams();\n\n  const { loading, data } = useQuery(userId ? QUERY_USER : QUERY_ME, {\n    variables: { userId: userId },\n  });\n\n  const user = data?.me || data?.user || {};\n  console.log('last user?', user)\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n  return (\n    <header className=\"bg-info text-dark mb-4 py-3 display-flex align-center\">\n      <div className=\"container flex-column justify-space-between-lg justify-center align-center text-center\">\n        <Link className=\"text-dark\" to=\"/\">\n          <h1 className=\"m-0\" style={{ fontSize: '3rem' }}>\n            Welcome to Our Brand New Pet Shop\n          </h1>\n        </Link>\n        <p className=\"m-0\" style={{ fontSize: '1.75rem', fontWeight: '700' }}>\n          Meet your new pets @.DevTeams Pet Shop\n        </p>\n        <div>\n          {Auth.loggedIn() ? (\n            <>\n              <Link\n                className=\"btn btn-block btn-squared btn-light text-dark\"\n                to={`/me`}\n              >\n                View your profile.\n              </Link>\n              <button className=\"btn btn-lg btn-light m-2\" onClick={logout}>\n                Logout\n              </button>\n            </>\n          ) : (\n            <>\n              <Link className=\"btn btn-lg btn-primary m-2\" to=\"/login\">\n                Login\n              </Link>\n              <Link className=\"btn btn-lg btn-light m-2\" to=\"/signup\">\n                Signup\n              </Link>\n            </>\n          )}\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\n\nconst Footer = () => {\n  const location = useLocation();\n  const history = useHistory();\n  return (\n    <footer className=\"w-100 mt-auto text-dark p-4\">\n      <div className=\"container text-center mb-5\">\n        {location.pathname !== '/' && (\n          <button\n            className=\"btn btn-dark mb-3\"\n            onClick={() => history.goBack()}\n          >\n            &larr; Go Back\n          </button>\n        )}\n        <h4>&copy; {new Date().getFullYear()} - Newly arrived  pets</h4>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Profile from './pages/Profile';\nimport Home from './pages/Home';\nimport Pet from './pages/Pet';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"flex-column justify-flex-start min-100-vh\">\n          <Header />\n          <div className=\"container\">\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/login\">\n              <Login />\n            </Route>\n            <Route exact path=\"/signup\">\n              <Signup />\n            </Route>\n            {/* <Route exact path=\"/newpet/:userId\">\n              <NewPet />\n            </Route> */}\n            <Route exact path=\"/pet/:petId\">\n              <Pet />\n            </Route>\n            <Route exact path=\"/profiles/:userId\">\n              <Profile />\n            </Route>\n            <Route exact path=\"/me\">\n              <Profile />\n            </Route>\n          </div>\n          <Footer />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}